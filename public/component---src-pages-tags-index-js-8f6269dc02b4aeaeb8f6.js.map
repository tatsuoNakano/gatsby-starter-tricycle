{"version":3,"file":"component---src-pages-tags-index-js-8f6269dc02b4aeaeb8f6.js","mappings":"gLAwDA,UA9CiB,QACKA,MACIC,QAAQ,MAAEC,GACVC,MACIC,cAAc,MAAEC,MAG3B,SACG,gBAAC,IAAM,KACL,2BACA,sBAAIC,UAAU,2IAA0I,YACnJJ,EAAMK,KAAIC,GAEX,wBACAC,IAAKD,EAAKE,WACVJ,UAAU,gHAEd,gBAAC,EAAAK,KAAI,CAACL,UAAU,oBAAoBM,GAAE,QAAWJ,EAAKE,WAAU,KAC3DF,EAAKE,WAAW,KAAGF,EAAKK,WAAW,KAEhC,wBAAMP,UAAU,oDACpB,wBAAMA,UAAU,wDAIb,C","sources":["webpack://gatsby-starter-tricycle/./src/pages/tags/index.js"],"sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Layout from '../../component/layout/layout'\r\n// Utilities\r\n\r\n\r\n// Components\r\n\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nconst TagsPage = ({\r\n                      data: {\r\n                          allMdx: { group },\r\n                          site: {\r\n                              siteMetadata: { title },\r\n                          },\r\n                      },\r\n                  }) => (\r\n                      <Layout>\r\n                        <div>\r\n                        <h1 className=\"mb-2 padding-b text-xl font-semibold text-gray-900 bg-gradient-to-br from-gray-200 to-gray-300 p-4 shadow-md border-l-4 border-blue-500\">All Tags</h1>\r\n                            {group.map(tags => (\r\n\r\n                            <span\r\n                            key={tags.fieldValue}\r\n                            className=\"mb-2.5 mt-2.5 inline-block bg-gray-300 text-gray-800 px-4 py-2 rounded-full text-xs font-bold mr-2  relative\"\r\n                            >\r\n                        <Link className=\"text-sm font-bold\" to={`/tag/${(tags.fieldValue)}/`}>\r\n                            {tags.fieldValue} ({tags.totalCount})\r\n                        </Link>\r\n                                <span className=\"absolute right-0 top-0 bottom-0 bg-gray-300 w-4\"></span>\r\n                            <span className=\"absolute right-0 top-0 bottom-0 bg-gray-400 w-3\"></span>\r\n                        </span>\r\n                    ))}\r\n                        </div>\r\n                      </Layout>\r\n)\r\n\r\nTagsPage.propTypes = {\r\n    data: PropTypes.shape({\r\n        allMds: PropTypes.shape({\r\n            group: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    fieldValue: PropTypes.string.isRequired,\r\n                    totalCount: PropTypes.number.isRequired,\r\n                }).isRequired\r\n            ),\r\n        }),\r\n        site: PropTypes.shape({\r\n            siteMetadata: PropTypes.shape({\r\n                title: PropTypes.string.isRequired,\r\n            }),\r\n        }),\r\n    }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n    query {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n            }\r\n        }\r\n        allMdx(limit: 2000) {\r\n            group(field: { frontmatter: { tags: SELECT }}) {\r\n                fieldValue\r\n                totalCount\r\n            }\r\n        }\r\n    }\r\n`"],"names":["data","allMdx","group","site","siteMetadata","title","className","map","tags","key","fieldValue","Link","to","totalCount"],"sourceRoot":""}